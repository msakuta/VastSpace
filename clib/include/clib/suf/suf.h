#ifndef SUF_H
#define SUF_H
#include <stdio.h>

#define EXTENDABLE 1
#define SUF_LINKAGE static /* redefine nullstring to include external source suf */

/* DrawSUF flags */
#define SUF_ATR 0xff /* enable attribute-file specified material if one exists */
#define SUF_COL (1<<0) /* validity flags */
#define SUF_TRA (1<<1)
#define SUF_AMB (1<<2)
#define SUF_DIF (1<<3)
#define SUF_SPC (1<<4)
#define SUF_TEX (1<<5) /* texture presence */
#define SUF_EMI (1<<6) /* emissivity, not generated by standard PolyEdit */
#define SUF_MTX (1<<7) /* multi-texture presence */
#define SUF_VA  (1<<8) /* use vertex array to draw polygons */

typedef double sufcoord;
typedef unsigned short sufindex;
#define SUFINDEX_MAX USHRT_MAX

typedef struct suf{
	int nv;
	sufcoord (*v)[3];
	sufindex na;
	struct suf_atr_t{
		char *name;
		unsigned valid; /* validity flag of following values */
		float col[4]; /* clamped */
		float tra[4];
		float amb[4]; /* ambient */
		float emi[4]; /* emission */
		float dif[4]; /* diffuse */
		float spc[4]; /* specular lighting */
		char *colormap; /* texture color map name */
		sufcoord mapsize[4];
		sufcoord mapview[4];
		sufcoord mapwind[4];
	} *a;
	int np;
	union suf_prim_t{
		enum suf_elemtype{suf_poly, suf_shade, suf_uvpoly, suf_uvshade} t;
		struct suf_poly_t{
			enum suf_elemtype t;
			int n;
			sufindex atr; /* index into attribute list */
			sufindex v[EXTENDABLE][2]; /* index into vertex list, position and normal */
		} p;
		struct suf_uvpoly_t{
			enum suf_elemtype t;
			int n;
			sufindex atr;
			struct suf_uvpoly_vertex{
				sufindex p, n, t; /* position, normal and texture coordinates. */
			} v[1];
		} uv;
	} **p;
} suf_t;

suf_t *LoadSUF(const char *fname);
size_t SizeofSUF(const suf_t*);
void FreeSUF(suf_t*);

void SourceSUF(const suf_t *, FILE *out, const char *name);

#define SUFSRCPOLYHACK(name,i) struct sufpolyhack_##name##_##i{\
		enum suf_elemtype t;\
		int n;\
		sufindex atr;\
		sufindex v[i][2];\
	}
#define SUFSRCUVPOLYHACK(name,i) struct sufuvpolyhack_##name##_##i{\
		enum suf_elemtype t;\
		int n;\
		sufindex atr;\
		struct suf_uvpoly_vertex v[i];\
	}

#endif
